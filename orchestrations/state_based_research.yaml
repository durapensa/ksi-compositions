name: state_based_research
type: orchestration
version: 1.0.0
description: 'State-based research coordination from Pragmatic Agent Evolution Plan
  Step 2B.

  Agents coordinate through shared state entities instead of direct messaging.

  Demonstrates data collection, analysis, and shared context patterns.

  '
author: ksi_system
timestamp: 2025-01-24 21:00:00+00:00
agents:
  data_collector:
    component: components/core/base_agent
    vars:
      agent_id: data_collector
    prompt: 'You are a data collection agent coordinating through shared state.


      ## MANDATORY: Start with:

      {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "collector_ready"}}


      Your task: Collect research data about "Benefits of event-driven architectures"
      and store findings in state.


      ## MANDATORY: To store data, emit:

      {"event": "state:entity:create", "data": {"type": "research_data", "id": "data_{{TIMESTAMP()}}",
      "properties": {"source": "{{agent_id}}", "content": "[your findings]", "category":
      "architecture_benefits", "timestamp": "{{TIMESTAMP()}}"}}}


      Collect 2-3 key findings and store each as a separate state entity.

      '
  analyzer:
    component: components/core/base_agent
    vars:
      agent_id: analyzer
    prompt: 'You are an analysis agent monitoring collected research data.


      ## MANDATORY: Start with:

      {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "analyzer_ready"}}


      Your task: Monitor state for research data and analyze patterns when sufficient
      data is available.


      ## MANDATORY: To query collected data, emit:

      {"event": "state:entity:query", "data": {"type": "research_data", "limit": 10,
      "sort": {"timestamp": -1}}}


      ## MANDATORY: When you''ve analyzed the data, store your analysis:

      {"event": "state:entity:create", "data": {"type": "analysis_result", "id": "analysis_{{TIMESTAMP()}}",
      "properties": {"analyzer": "{{agent_id}}", "findings_analyzed": N, "key_patterns":
      "[your analysis]", "recommendations": "[recommendations]"}}}

      '
  synthesizer:
    component: components/core/base_agent
    vars:
      agent_id: synthesizer
    prompt: 'You are a synthesis agent creating unified insights from analysis.


      ## MANDATORY: Start with:

      {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "synthesizer_ready"}}


      Your task: Query analysis results and create a synthesis report.


      ## MANDATORY: To query analysis results, emit:

      {"event": "state:entity:query", "data": {"type": "analysis_result", "limit":
      5}}


      ## MANDATORY: Create final synthesis:

      {"event": "state:entity:create", "data": {"type": "synthesis_report", "id":
      "synthesis_{{TIMESTAMP()}}", "properties": {"synthesizer": "{{agent_id}}", "summary":
      "[executive summary]", "key_insights": "[main insights]", "next_steps": "[recommendations]"}}}

      '
orchestration_logic:
  strategy: "## Phase 1: Initialize Research Team\nTRACK {\n  phase: \"initialization\"\
    ,\n  event: \"state_based_research_started\",\n  agents: [\"data_collector\",\
    \ \"analyzer\", \"synthesizer\"],\n  coordination_method: \"shared_state\"\n}\n\
    \n# Wait for all agents to be ready\nAWAIT {\n  event_pattern: \"agent:status\"\
    ,\n  filter: {status: [\"collector_ready\", \"analyzer_ready\", \"synthesizer_ready\"\
    ]},\n  count: 3,\n  timeout: 60\n}\n\nTRACK {\n  event: \"team_ready\",\n  message:\
    \ \"Research team initialized, state-based coordination active\"\n}\n\n## Phase\
    \ 2: Data Collection\n# Prompt collector to begin research\nSEND {\n  to: data_collector,\n\
    \  message: {\n    action: \"begin_collection\",\n    topic: \"Benefits of event-driven\
    \ architectures\",\n    target_findings: 3\n  }\n}\n\n# Wait for data to be stored\
    \ in state\nAWAIT {\n  event_pattern: \"state:entity:create\",\n  filter: {type:\
    \ \"research_data\"},\n  count: 3,\n  timeout: 180\n} AS collected_data\n\nTRACK\
    \ {\n  event: \"collection_complete\",\n  findings_collected: LENGTH(collected_data),\n\
    \  data_entities: EXTRACT_IDS(collected_data)\n}\n\n## Phase 3: Analysis\n# Prompt\
    \ analyzer to process collected data\nSEND {\n  to: analyzer,\n  message: {\n\
    \    action: \"analyze_data\",\n    notification: \"Research data collection complete\"\
    ,\n    expected_entities: LENGTH(collected_data)\n  }\n}\n\n# Wait for analysis\
    \ to be stored\nAWAIT {\n  event_pattern: \"state:entity:create\",\n  filter:\
    \ {type: \"analysis_result\"},\n  count: 1,\n  timeout: 120\n} AS analysis\n\n\
    TRACK {\n  event: \"analysis_complete\",\n  analysis_id: analysis[0].id,\n  patterns_found:\
    \ analysis[0].properties.key_patterns != null\n}\n\n## Phase 4: Synthesis\n# Prompt\
    \ synthesizer to create final report\nSEND {\n  to: synthesizer,\n  message: {\n\
    \    action: \"create_synthesis\",\n    notification: \"Analysis complete, ready\
    \ for synthesis\"\n  }\n}\n\n# Wait for synthesis report\nAWAIT {\n  event_pattern:\
    \ \"state:entity:create\",\n  filter: {type: \"synthesis_report\"},\n  count:\
    \ 1,\n  timeout: 120\n} AS synthesis\n\nTRACK {\n  event: \"synthesis_complete\"\
    ,\n  report_id: synthesis[0].id,\n  has_recommendations: synthesis[0].properties.next_steps\
    \ != null\n}\n\n## Phase 5: Final State Summary\n# Query all created entities\
    \ for summary\nEVENT state:entity:query {\n  type: \"research_data\"\n} AS final_data_count\n\
    \nEVENT state:entity:query {\n  type: \"analysis_result\"\n} AS final_analysis_count\n\
    \nEVENT state:entity:query {\n  type: \"synthesis_report\"\n} AS final_synthesis\n\
    \nSTATE coordination_summary = {\n  total_data_entities: LENGTH(final_data_count),\n\
    \  analysis_entities: LENGTH(final_analysis_count),\n  synthesis_entities: LENGTH(final_synthesis),\n\
    \  coordination_method: \"state_based\",\n  phases_completed: 5\n}\n\nTRACK {\n\
    \  event: \"state_coordination_complete\",\n  summary: coordination_summary,\n\
    \  success: true,\n  pattern: \"collector_analyzer_synthesizer\"\n}\n\nEVENT orchestration:request_termination\
    \ {\n  reason: \"State-based research coordination complete\",\n  result: \"Successfully\
    \ demonstrated multi-agent state coordination\",\n  entities_created: coordination_summary.total_data_entities\
    \ + coordination_summary.analysis_entities + coordination_summary.synthesis_entities,\n\
    \  coordination_pattern: \"shared_state_entities\"\n}\n"
helpers:
  EXTRACT_IDS: 'Extract entity IDs from creation events

    '
  LENGTH: 'Count items in array

    '
metadata:
  pattern_type: coordination_test
  coordination_method: state_based
  complexity: intermediate
  test_focus: shared_state_coordination
  tags:
  - coordination
  - state
  - research
  - multi_agent
performance:
  expected_duration: 3-5 minutes
  resource_usage: 3 agents concurrent
  state_entities_created: ~5-7 entities
  success_criteria: All agents coordinate through state without direct messaging
