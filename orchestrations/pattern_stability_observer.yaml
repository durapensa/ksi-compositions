name: pattern_stability_observer
type: orchestration
version: 1.0.0
description: |
  A meta-orchestration pattern that observes and analyzes the stability dynamics
  of other orchestration patterns. Detects emergence, convergence, divergence,
  oscillation, and chaos in multi-agent systems.
author: claude_orchestrator
extends: null

metadata:
  tags:
    - meta-pattern
    - stability-analysis
    - emergence
    - dynamics
    - observer
    - research
  capabilities_required:
    - observation:subscribe
    - orchestration:analyze
    - composition:track_decision
    - event:analyze
  use_cases:
    - Pattern stability research
    - Emergent behavior detection
    - System dynamics analysis
    - Orchestration optimization

# Meta-orchestration DSL for pattern observation
orchestration_logic:
  description: |
    This meta-pattern observes other running orchestrations to detect stability
    patterns, emergent behaviors, and systemic dynamics. It identifies which
    patterns lead to stable outcomes versus chaotic or divergent behaviors.
  
  strategy: |
    INITIALIZE observation_framework:
      TARGET patterns_to_observe FROM active_orchestrations
      ESTABLISH metrics FOR stability_analysis:
        - event_frequency: rate of event emission
        - agent_churn: creation/termination rates
        - decision_variance: consistency of choices
        - resource_consumption: computational load
        - convergence_indicators: settling behaviors
        - emergence_markers: novel patterns appearing
    
    SPAWN observer_agents WITH specialized_roles:
      - dynamics_analyst: "Detect phase transitions"
      - pattern_recognizer: "Identify recurring motifs"
      - chaos_detector: "Find sensitive dependencies"
      - emergence_tracker: "Spot novel behaviors"
      - stability_classifier: "Categorize system states"
    
    CONTINUOUS_MONITORING phase:
      SUBSCRIBE to_event_streams OF target_patterns
      MAINTAIN sliding_windows FOR temporal_analysis:
        - short_term: last 100 events
        - medium_term: last 1000 events
        - long_term: entire execution history
      
      DETECT stability_signatures:
        STABLE_CONVERGENCE when:
          - event_patterns.repeat WITH high_regularity
          - agent_behaviors.settle INTO fixed_points
          - decision_variance < stability_threshold
          - resource_usage.plateaus
          
        DYNAMIC_EQUILIBRIUM when:
          - system_oscillates BETWEEN stable_states
          - patterns_cycle WITH predictable_period
          - agents_maintain BALANCED interactions
          - no_runaway_growth OR collapse
          
        EMERGENT_COMPLEXITY when:
          - novel_patterns.appear NOT in_original_design
          - agent_interactions.create NEW capabilities
          - system_behavior > sum_of_parts
          - self_organization.observed
          
        CHAOTIC_DYNAMICS when:
          - small_changes.cause LARGE effects
          - prediction_horizon.very_short
          - pattern_repetition.absent
          - sensitive_dependence ON initial_conditions
          
        DIVERGENT_INSTABILITY when:
          - resource_consumption.exponential
          - agent_population.exploding OR collapsing
          - event_storms.detected
          - system_heading TOWARD breakdown
    
    ANALYSIS_SYNTHESIS phase:
      AGGREGATE observations ACROSS time_windows
      
      IDENTIFY critical_factors:
        - feedback_loops: positive vs negative
        - coupling_strength: tight vs loose
        - adaptation_rate: fast vs slow
        - diversity_level: homogeneous vs heterogeneous
        
      CORRELATE pattern_features WITH stability_outcomes:
        - "Tight coupling + fast adaptation = instability"
        - "Negative feedback + diversity = robustness"
        - "Homogeneity + positive feedback = fragility"
        
      DISCOVER tipping_points:
        WHEN system_transitions BETWEEN states
        WHAT triggers_caused transition
        HOW to_predict future_transitions
        WHETHER transitions.reversible
    
    INTERVENTION_EXPERIMENTS phase:
      IF interesting_dynamics.detected:
        DESIGN minimal_interventions:
          - inject_noise: test robustness
          - remove_agent: test redundancy
          - amplify_signal: test sensitivity
          - delay_message: test synchronization
        
        OBSERVE system_response:
          - recovers_quickly: robust
          - adapts_around: resilient
          - cascading_failure: fragile
          - new_equilibrium: adaptive
    
    KNOWLEDGE_CRYSTALLIZATION phase:
      CLASSIFY observed_patterns INTO stability_categories
      EXTRACT design_principles FOR stable_orchestrations:
        - architectural_patterns that promote stability
        - anti_patterns that lead to chaos
        - boundary_conditions for phase transitions
        
      GENERATE stability_report:
        pattern_name: observed_orchestration
        stability_classification: [stable|meta-stable|chaotic|divergent]
        key_dynamics: identified_behaviors
        critical_parameters: sensitive_variables
        design_recommendations: improvements
        fascinating_phenomena: unexpected_discoveries
      
      IF novel_stability_pattern.discovered:
        EMIT "composition:create" WITH:
          name: "stable_variant_of_{{pattern}}"
          modifications: stabilizing_changes
          rationale: theoretical_basis

# Transformers for meta-observation
transformers:
  # Subscribe to pattern events
  - source: "observer:monitor_pattern"
    target: "observation:subscribe"
    mapping:
      observer: "{{observer_agent_id}}"
      target: "*"  # All agents in pattern
      events: ["*"]  # All events
      filter:
        include_responses: true
        sampling_rate: 1.0  # Capture everything initially
  
  # Analyze event streams
  - source: "observer:analyze_dynamics"
    target: "completion:async"
    async: true
    mapping:
      prompt: |
        Analyze system dynamics from event stream:
        
        Time window: {{analysis_window}}
        Event patterns: {{event_frequency_data}}
        Agent behaviors: {{agent_activity_data}}
        Decision patterns: {{decision_history}}
        
        Identify:
        1. Stability classification
        2. Emergent behaviors
        3. Critical transitions
        4. Predictive indicators
        
        Return structured analysis with confidence scores.
      model: "claude-cli/claude-sonnet-4-20250514"
      request_id: "{{transform_id}}"
    response_route:
      from: "completion:result"
      to: "observer:dynamics_analyzed"
  
  # Detect emergence
  - source: "observer:detect_emergence"
    target: "orchestration:aggregate"
    mapping:
      responses: "{{multi_window_observations}}"
      method: "custom"
      options:
        function: "emergence_detection"
        compare_windows: ["short", "medium", "long"]
        novelty_threshold: 0.3
        persistence_required: 10  # How long pattern must persist
  
  # Experiment with interventions
  - source: "observer:inject_perturbation"
    target: "event:emit"
    mapping:
      event: "{{perturbation_type}}"
      data: "{{perturbation_data}}"
      metadata:
        experiment_id: "{{experiment_id}}"
        hypothesis: "{{expected_response}}"
  
  # Generate stability report
  - source: "observer:synthesize_findings"
    target: "composition:track_decision"
    mapping:
      pattern: "pattern_stability_observer"
      decision: "stability_classification"
      context:
        observed_pattern: "{{target_pattern}}"
        classification: "{{stability_type}}"
        confidence: "{{classification_confidence}}"
        key_findings: "{{dynamics_summary}}"
        design_insights: "{{recommendations}}"

# Variables for stability analysis
variables:
  stability_threshold: 0.1
  chaos_sensitivity: 0.01
  emergence_novelty_threshold: 0.3
  observation_windows:
    short: 100
    medium: 1000
    long: 10000
  intervention_strength: 0.1
  classification_confidence_required: 0.7

# Performance tracking
performance:
  patterns_analyzed: 0
  stability_distributions:
    stable: 0
    meta_stable: 0
    chaotic: 0
    divergent: 0
  emergent_behaviors_discovered: 0
  successful_interventions: 0

# Learnings
learnings:
  - insight: "Feedback loops are primary determinants of stability"
    confidence: 0.9
    evidence: "System dynamics theory"
  - insight: "Diversity in agent behaviors promotes robustness"
    confidence: 0.85
    evidence: "Complex systems research"
  - insight: "Phase transitions often preceded by critical slowing"
    confidence: 0.8
    evidence: "Dynamical systems theory"
  - insight: "Emergent behaviors appear at edge of chaos"
    confidence: 0.75
    evidence: "Complexity science"