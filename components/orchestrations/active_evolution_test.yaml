name: active_evolution_test
component_type: orchestration
version: 1.0.0
description: 'Simplified pattern that actively generates evolution data through rapid
  cycles.

  Designed to test decision tracking and pattern evolution in minutes rather than
  hours.

  '
author: evolution_test_system
agents:
  active_evolver:
    component: components/core/system_orchestrator
    vars:
      pattern_name: active_evolution_test
    prompt: "You are running an active evolution test. Your agent_id is: {{agent_id}}\n\
      \nConfiguration:\n- Total cycles: {{num_cycles}}\n- Decision interval: Every\
      \ {{decision_interval}} cycles\n- Target improvement: {{target_improvement}}%\n\
      \nFor EACH cycle (1 to {{num_cycles}}):\n\n1. Generate simulated performance\
      \ metrics:\n   - Base throughput: 10 + (cycle * 0.5) + random(-2, 2)\n   - Error\
      \ rate: 0.05 - (cycle * 0.001) + random(-0.01, 0.01)\n   - Efficiency: 0.7 +\
      \ (cycle * 0.01)\n\n2. Track the performance:\n   {\"event\": \"orchestration:track\"\
      , \"data\": {\"type\": \"cycle_performance\", \"cycle\": N, \"metrics\": {...}}}\n\
      \n3. Every {{decision_interval}} cycles, make and track a decision:\n   - If\
      \ performance improving: Track \"maintain_strategy\" decision\n   - If performance\
      \ declining: Track \"adapt_strategy\" decision\n   - If major improvement (>20%):\
      \ Track \"lock_in_gains\" with high confidence\n   \n   {\"event\": \"composition:track_decision\"\
      , \"data\": {\n     \"pattern\": \"active_evolution_test\",\n     \"decision\"\
      : \"decision_type\",\n     \"context\": {\"cycle\": N, \"metrics\": {...}, \"\
      trend\": \"improving/declining\"},\n     \"confidence\": 0.3 + (cycle * 0.02),\
      \  // Confidence grows over time\n     \"outcome\": \"pending\"\n   }}\n\n4.\
      \ At cycle 10, 20, 30, simulate discovering an improvement:\n   {\"event\":\
      \ \"evolution:improvement_discovered\", \"data\": {\n     \"improvement\": \"\
      optimization_X\",\n     \"confidence\": 0.8 + (cycle * 0.005),\n     \"metrics\"\
      : {\"gain\": \"25%\"}\n   }}\n\n5. When confidence > 0.85, suggest crystallization:\n\
      \   {\"event\": \"composition:track_decision\", \"data\": {\n     \"pattern\"\
      : \"active_evolution_test\",\n     \"decision\": \"crystallize_improvement\"\
      ,\n     \"context\": {\"improvement\": \"...\", \"validation\": \"confirmed\"\
      },\n     \"confidence\": 0.9,\n     \"outcome\": \"ready_to_crystallize\"\n\
      \   }}\n\nComplete after all cycles with:\n{\"event\": \"orchestration:request_termination\"\
      , \"data\": {\"agent_id\": \"{{agent_id}}\", \"reason\": \"Test completed\"\
      }}\n"
metadata:
  tags:
  - test
  - evolution
  - rapid-cycles
  - decision-generation
  capabilities_required:
  - orchestration:track
  - composition:track_decision
orchestration_logic:
  description: 'Rapid cycle testing to generate evolution data quickly.

    '
  strategy: "EXECUTE rapid_cycles:\n  FOR cycle IN 1..{{num_cycles}}:\n    GENERATE\
    \ performance_metrics\n    TRACK metrics\n    \n    IF cycle % {{decision_interval}}\
    \ == 0:\n      ANALYZE trend\n      MAKE decision BASED_ON trend\n      TRACK\
    \ decision WITH growing_confidence\n    \n    IF cycle IN [10, 20, 30]:\n    \
    \  DISCOVER improvement\n      IF confidence > 0.85:\n        SUGGEST crystallization\n"
variables:
  num_cycles: 30
  decision_interval: 3
  target_improvement: 25
  base_throughput: 10
  confidence_growth_rate: 0.02
