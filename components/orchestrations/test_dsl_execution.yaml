name: test_dsl_execution
component_type: orchestration
version: 1.0.0
description: 'Simple test orchestration to verify DSL execution works correctly.

  Uses the DSL interpreter orchestrator to execute basic commands.

  '
author: ksi_system
timestamp: 2025-01-18 23:30:00+00:00
agents:
  dsl_executor:
    component: components/core/dsl_interpreter_orchestrator
    vars:
      agent_id: dsl_executor
      pattern_name: test_dsl_execution
  worker_a:
    component: components/core/base_agent
    vars:
      agent_id: worker_a
    prompt: 'You are Worker A. When you receive a task, acknowledge it and report
      completion.


      ## MANDATORY: Start with:

      {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "worker_a_ready"}}


      When you receive a task:

      {"event": "state:entity:update", "data": {"id": "{{agent_id}}_task", "properties":
      {"status": "completed", "task": "..."}}}

      '
  worker_b:
    component: components/core/base_agent
    vars:
      agent_id: worker_b
    prompt: 'You are Worker B. When you receive a task, acknowledge it and report
      completion.


      ## MANDATORY: Start with:

      {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "worker_b_ready"}}


      When you receive a task:

      {"event": "state:entity:update", "data": {"id": "{{agent_id}}_task", "properties":
      {"status": "completed", "task": "..."}}}

      '
variables:
  num_tasks: 3
orchestration_logic:
  strategy: "## Test DSL Execution\n\n# Initialize state\nSTATE task_count = 0\nSTATE\
    \ results = []\n\nTRACK {phase: \"initialization\", message: \"Starting DSL execution\
    \ test\"}\n\n# Send tasks to workers\nLOOP i FROM 1 TO {{num_tasks}}:\n  TRACK\
    \ {event: \"sending_task\", task_number: i}\n  \n  # Send to worker A\n  SEND\
    \ {\n    to: worker_a,\n    message: {\n      role: \"user\",\n      content:\
    \ \"Please process task #{{i}}: Calculate fibonacci({{i}})\"\n    }\n  }\n  \n\
    \  # Send to worker B  \n  SEND {\n    to: worker_b,\n    message: {\n      role:\
    \ \"user\", \n      content: \"Please process task #{{i}}: Calculate factorial({{i}})\"\
    \n    }\n  }\n  \n  STATE task_count = task_count + 1\n  \n  TRACK {event: \"\
    tasks_sent\", count: task_count}\n\n# Final tracking\nTRACK {\n  phase: \"complete\"\
    ,\n  total_tasks_sent: task_count,\n  workers: [\"worker_a\", \"worker_b\"],\n\
    \  message: \"DSL execution test completed\"\n}\n\n# Request termination\nEVENT\
    \ orchestration:request_termination {\n  agent_id: \"dsl_executor\",\n  reason:\
    \ \"Test completed successfully\"\n}\n"
metadata:
  tags:
  - test
  - dsl
  - execution
  - simple
  capabilities_required:
  - orchestration:track
  - message:send
  - state:entity:create
