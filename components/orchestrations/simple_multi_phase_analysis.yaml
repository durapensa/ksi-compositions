name: simple_multi_phase_analysis
component_type: orchestration
version: 1.0.0
description: |
  Simple multi-phase analysis orchestration demonstrating phase-based coordination.
  Three phases: Data Collection → Analysis → Synthesis, with state tracking throughout.
author: ksi_system
timestamp: 2025-01-26 17:00:00+00:00

agents:
  phase_coordinator:
    component: components/core/base_agent
    vars:
      initial_prompt: |
        You coordinate a 3-phase analysis workflow.
        
        ## MANDATORY: Start with this exact JSON:
        {"event": "agent:status", "data": {"agent_id": "{{agent_id}}", "status": "coordinator_ready", "phases": 3}}
        
        ## Your Phases:
        1. **Data Collection**: Gather information on "{{topic}}"
        2. **Analysis**: Analyze collected data for patterns
        3. **Synthesis**: Create actionable insights
        
        ## Phase Management:
        - Track phase transitions with state updates
        - Coordinate agents for each phase
        - Collect outputs between phases
        - Create final summary report
        
        ## Phase Transition Events:
        {"event": "state:entity:update", "data": {"id": "analysis_state", "properties": {"current_phase": N, "status": "starting|complete"}}}
        
        Start immediately with Phase 1.

variables:
  topic: "{{topic|default:Agent communication patterns in KSI}}"
  collection_agents: "{{collection_agents|default:2}}"
  analysis_agents: "{{analysis_agents|default:1}}"

orchestration_logic:
  strategy: |
    # Initialize Analysis State
    EVENT state:entity:create {
      type: "analysis_workflow",
      id: "analysis_state",
      properties: {
        workflow_id: "{{WORKFLOW_ID()}}",
        topic: "{{topic}}",
        current_phase: 0,
        status: "initializing",
        start_time: "{{TIMESTAMP()}}"
      }
    }
    
    # Wait for coordinator ready
    AWAIT {
      event_pattern: "agent:status",
      filter: {status: "coordinator_ready"},
      timeout: 30
    }
    
    ## Phase 1: Data Collection
    SEND {
      to: phase_coordinator,
      message: {
        action: "start_phase",
        phase: 1,
        phase_name: "Data Collection",
        instructions: |
          Create {{collection_agents}} data collectors to gather information about:
          {{topic}}
          
          Each collector should:
          - Research a specific aspect
          - Report findings via state entities
          - Signal completion when done
      }
    }
    
    # Wait for phase 1 completion
    AWAIT {
      event_pattern: "state:entity:update",
      filter: {id: "analysis_state", properties.current_phase: 1, properties.status: "complete"},
      timeout: 300
    } AS phase_1_done
    
    TRACK {
      event: "phase_1_complete",
      duration: DURATION(phase_1_done.timestamp)
    }
    
    ## Phase 2: Analysis
    SEND {
      to: phase_coordinator,
      message: {
        action: "start_phase", 
        phase: 2,
        phase_name: "Analysis",
        instructions: |
          Create {{analysis_agents}} analyst(s) to:
          - Review collected data from phase 1
          - Identify key patterns and insights
          - Prepare structured analysis results
      }
    }
    
    # Wait for phase 2 completion
    AWAIT {
      event_pattern: "state:entity:update",
      filter: {id: "analysis_state", properties.current_phase: 2, properties.status: "complete"},
      timeout: 300
    } AS phase_2_done
    
    TRACK {
      event: "phase_2_complete",
      patterns_found: phase_2_done.properties.pattern_count
    }
    
    ## Phase 3: Synthesis
    SEND {
      to: phase_coordinator,
      message: {
        action: "start_phase",
        phase: 3,
        phase_name: "Synthesis",
        instructions: |
          Create final synthesis:
          - Combine all analysis results
          - Generate actionable recommendations
          - Create executive summary
          - Report completion
      }
    }
    
    # Wait for final phase
    AWAIT {
      event_pattern: "state:entity:update",
      filter: {id: "analysis_state", properties.current_phase: 3, properties.status: "complete"},
      timeout: 300
    } AS phase_3_done
    
    # Create final report
    EVENT state:entity:create {
      type: "analysis_report",
      id: "report_{{TIMESTAMP()}}",
      properties: {
        workflow_id: "{{WORKFLOW_ID()}}",
        topic: "{{topic}}",
        phases_completed: 3,
        total_duration: DURATION(phase_3_done.timestamp),
        key_findings: phase_3_done.properties.findings,
        recommendations: phase_3_done.properties.recommendations
      }
    }
    
    TRACK {
      event: "analysis_complete",
      workflow: "multi_phase_analysis",
      phases: 3,
      success: true
    }
    
    EVENT orchestration:request_termination {
      reason: "Multi-phase analysis complete",
      phases_completed: 3,
      topic: "{{topic}}"
    }

helpers:
  WORKFLOW_ID: Generate unique workflow identifier
  TIMESTAMP: Current timestamp
  DURATION: Calculate duration from start

metadata:
  pattern_type: multi_phase_analysis
  phases: 3
  coordination: phase_coordinator
  complexity: moderate
  tags:
    - multi_phase
    - analysis
    - state_tracking
    - coordination

performance:
  expected_duration: 5-10 minutes
  agent_count: 3-5 agents total
  state_entities: ~10 entities