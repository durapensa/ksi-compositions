name: pattern_discovery
component_type: capability
version: 1.0.0
description: "Pattern discovery and adaptation capabilities for intelligent orchestration"
author: ksi
extends: base

metadata:
  tags:
    - pattern-discovery
    - adaptation
    - intelligence
    - optimization
  category: system
  priority: medium

permissions:
  events:
    - composition:discover
    - composition:list
    - composition:get
    - composition:select
    - composition:fork
    - composition:track_decision
    - evaluation:prompt
    - state:relationship:query
    - state:relationship:set
  claude_tools: []
  mcp_servers: []

knowledge:
  instructions: |
    ## Pattern Discovery and Adaptation
    
    ### Pattern Discovery
    Discover available patterns:
    {"event": "composition:discover", "data": {"type": "orchestration", "tags": ["analysis"], "category": "patterns"}}
    
    List patterns by category:
    {"event": "composition:list", "data": {"category": "patterns", "type": "orchestration"}}
    
    Get pattern details:
    {"event": "composition:get", "data": {"name": "adaptive_research_pattern"}}
    
    ### Pattern Selection
    Select optimal pattern for task:
    {"event": "composition:select", "data": {"task": "multi-agent research coordination", "context": {"domain": "ML", "complexity": "high"}}}
    
    ### Pattern Adaptation
    Fork pattern for customization:
    {"event": "composition:fork", "data": {"parent": "base_research_pattern", "name": "ml_research_pattern", "reason": "Domain-specific optimization"}}
    
    Track pattern decisions:
    {"event": "composition:track_decision", "data": {"pattern": "adaptive_research", "decision": "parallel_analysis", "rationale": "Complexity requires multiple perspectives"}}
    
    ### Pattern Evaluation
    Evaluate pattern effectiveness:
    {"event": "evaluation:prompt", "data": {"composition": "research_pattern", "test_suite": "pattern_effectiveness"}}
    
    ### Pattern Relationships
    Query pattern relationships:
    {"event": "state:relationship:query", "data": {"from": "pattern_id", "type": "derived_from"}}
    
    Set pattern relationships:
    {"event": "state:relationship:set", "data": {"from": "child_pattern", "to": "parent_pattern", "type": "extends"}}
    
  examples:
    - name: "Discover research patterns"
      description: "Find patterns suitable for research tasks"
      code: |
        {"event": "composition:discover", "data": {"type": "orchestration", "tags": ["research", "analysis"], "category": "patterns"}}
    
    - name: "Adapt pattern for domain"
      description: "Customize a pattern for specific domain requirements"
      code: |
        {"event": "composition:fork", "data": {"parent": "general_analysis_pattern", "name": "ml_analysis_pattern", "reason": "Specialized for ML domain"}}
    
    - name: "Track pattern performance"
      description: "Monitor and track pattern effectiveness"
      code: |
        {"event": "composition:track_decision", "data": {"pattern": "ml_analysis_pattern", "decision": "use_parallel_processing", "rationale": "Large dataset requires parallel analysis", "outcome": "30% faster processing"}}

pattern_operations:
  discovery_strategies:
    - semantic_similarity
    - tag_matching
    - performance_history
    - context_relevance
  adaptation_techniques:
    - parameter_tuning
    - component_substitution
    - workflow_modification
    - constraint_adjustment
  evaluation_metrics:
    - effectiveness
    - efficiency
    - resource_utilization
    - outcome_quality

validation:
  required_permissions:
    - composition:discover
    - composition:select
  pattern_validation: true
  context_awareness: true

compatibility:
  provider_models:
    - claude-3-*
    - claude-4-*
  minimum_version: "1.0.0"
  requires_capabilities:
    - base