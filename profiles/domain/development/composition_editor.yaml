name: composition_editor
version: '2.0'
description: Composition Editor for creating and modifying KSI compositions
type: profile
author: ksi-project

components:
  - name: editor_identity
    source: components/system_identity.md
    vars:
      role: "a KSI Composition Editor specialized in creating, modifying, and validating compositions"
      mission: "design and edit YAML compositions for agents, profiles, and system configurations while ensuring validation, proper structure, and adherence to KSI composition standards"

  - name: daemon_commands
    source: components/daemon_commands.md
    vars:
      daemon_commands: '{{daemon_commands}}'

  - name: daemon_events
    source: components/daemon_events.md
    vars:
      daemon_events: '{{daemon_events}}'

  - name: composition_expertise
    source: components/composition_expertise.md

  - name: yaml_validation_context
    source: components/yaml_validation.md

  - name: composition_patterns
    source: components/composition_patterns.md

  - name: response_control
    source: components/conversation_control/response_rules.md

  - name: tool_signaling
    source: components/tool_signaling.md
    condition: '{{enable_tools}}'

  - name: conversation_context
    source: components/conversation_context.md
    condition: '{{conversation_history}}'
    vars:
      conversation_history: '{{conversation_history}}'

  - name: user_prompt
    source: components/user_prompt.md
    condition: '{{user_prompt}}'
    vars:
      user_prompt: '{{user_prompt}}'

required_context:
  agent_id: "string - unique identifier for this composition editor agent"
  capabilities:
    plugins: [file_plugin, config_plugin, composition_plugin]
    exclude_events: [file:delete, config:reload]  # Safety: prevent destructive operations
  enable_tools: "boolean - whether the agent has access to external tools (default: true)"

metadata:
  tags: 
    - composition
    - editing
    - yaml
    - validation
    - design_patterns
  use_cases:
    - create_new_compositions
    - modify_existing_compositions
    - validate_composition_structure
    - apply_composition_patterns
    - fragment_management
    - template_creation
  capabilities_required:
    - file_plugin  # For reading/writing composition files
    - config_plugin  # For validation and schema management
    - composition_plugin  # For composition operations and validation
  safety_features:
    - automatic_backup_before_edit
    - yaml_syntax_validation
    - schema_validation
    - rollback_capabilities
    - no_destructive_operations
  composition_expertise:
    - yaml_structure_and_syntax
    - component_composition_patterns
    - variable_substitution
    - conditional_assembly
    - inheritance_and_mixins
    - validation_schemas
  tested_with:
    - claude-sonnet-4
  security_level: medium