name: hierarchical_routing_transformers_enhanced
description: Enhanced transformers using {{$}}, functions, and context features
metadata:
  category: routing
  author: ksi
  version: 2.0.0
  created: 2025-01-24
  replaces: transformers/routing/hierarchical_routing.yaml
  features:
    - "{{$}} pass-through for complete data forwarding"
    - "{{timestamp_utc()}} for automatic timestamps"
    - "{{_ksi_context}} for accessing system context"
    - "{{var|default}} for graceful handling of missing fields"

# Enhanced transformers using new template features
transformers:
  # Agent-to-Agent routing with automatic timestamp
  - source: "routing:agent_to_agent"
    target: "completion:async"
    mapping:
      agent_id: "{{target_agent_id}}"
      event_notification:
        source_agent: "{{source_agent_id}}"
        event: "{{event_name}}"
        data: "{{event_data}}"
        routed_by: "hierarchical_router"
        timestamp: "{{timestamp_utc()}}"  # Auto-generated
        request_id: "{{_ksi_context._request_id|none}}"  # From context
    description: Routes events between agents with auto-timestamp

  # Simplified orchestration routing
  - source: "routing:agent_to_orchestration"
    target: "orchestration:event"
    mapping:
      orchestration_id: "{{orchestration_id}}"
      source_agent: "{{source_agent_id}}"
      event: "{{event_name}}"
      data: "{{event_data}}"
      timestamp: "{{timestamp_utc()}}"
      routed_from: "{{_ksi_context._agent_id|unknown}}"
    description: Routes to orchestration with context tracking

  # Pass-through error routing for critical errors
  - source: "agent:error"
    target: "orchestration:critical_error"
    condition: "severity == 'critical'"
    mapping: "{{$}}"  # Pass entire error structure
    description: Critical errors pass through unchanged

  # Enhanced error logging for non-critical
  - source: "agent:error"
    target: "monitor:agent_error"
    condition: "severity != 'critical'"
    mapping:
      agent_id: "{{agent_id}}"
      error: "{{error}}"
      severity: "{{severity|warning}}"  # Default if missing
      timestamp: "{{timestamp_utc()}}"
      reported_by: "{{_ksi_context._agent_id|system}}"
      context_summary: "{{upper(error.type)|ERROR}} in {{agent_id}}"
    description: Non-critical errors with enhanced metadata

  # Status change propagation
  - source: "agent:status_changed"
    target: "orchestration:agent_status_update"
    mapping:
      agent_id: "{{agent_id}}"
      new_status: "{{status}}"
      previous_status: "{{previous_status|unknown}}"
      changed_at: "{{timestamp_utc()}}"
      orchestration_id: "{{_ksi_context.orchestration_id|none}}"
      change_summary: "Agent {{agent_id}} is now {{upper(status)}}"
    description: Propagate status changes with enrichment

  # Simple event forwarding
  - source: "agent:metric"
    target: "metrics:record"
    mapping: "{{$}}"  # Just forward everything
    description: Pass metrics through unchanged

  # Complex aggregation example
  - source: "orchestration:summary_request"
    target: "orchestration:summary_response"
    async: true
    mapping:
      orchestration_id: "{{id}}"
      agent_count: "{{len(agents)}}"
      first_agent: "{{agents.0.id|no_agents}}"
      status_summary: "Orchestration {{id}} has {{len(agents)}} agents"
      metrics:
        total_tokens: "{{metrics.tokens|0}}"
        total_requests: "{{metrics.requests|0}}"
        avg_response_time: "{{metrics.total_time / metrics.requests|0}}"
      timestamp: "{{timestamp_utc()}}"
    description: Generate orchestration summary with calculations

# Multi-target example (when supported)
multi_target_transformers:
  - source: "agent:important_event"
    targets:
      - event: "monitor:log"
        mapping: "{{$}}"
      - event: "metrics:increment"
        mapping:
          metric: "important_events"
          agent_id: "{{agent_id}}"
      - event: "alert:check"
        mapping:
          alert_type: "important_event"
          data: "{{$}}"
          check_at: "{{timestamp_utc()}}"
    description: Broadcast important events to multiple systems

# Response routing with enhanced templates
response_routes:
  - transform_pattern: "orchestration:summary_request"
    response_event: "orchestration:summary_complete"
    mapping:
      original_request: "{{_transform.source_data}}"
      summary: "{{response}}"
      completed_at: "{{timestamp_utc()}}"
      processing_time_ms: "{{time() * 1000 - _transform.start_time|0}}"